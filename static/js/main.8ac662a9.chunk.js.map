{"version":3,"sources":["Components/items-popup-box.js","Components/Inventory.js","Components/Use-Items.js","Components/Garden.js","Components/Kitchen.js","Components/Cellar.js","Components/Epilogue.js","App.js","index.js"],"names":["ItemsPopupBox","props","object","className","name","description","onClick","onPickUp","onClose","setInventory","collectedItems","map","inventoryItem","UsingItems","history","useHistory","onUse","inventoryItems","filter","item","includes","length","newInventoryItems","reduce","initialArray","inventoryStuff","push","usedItem","data","items","find","setInventoryItems","alert","Garden","React","useState","currentItem","setCurrentItem","collectorArray","showItem","foundObject","gardenItems","setGardenItems","haveKey","key","concat","newGardenItems","gardenItem","undefined","use","removeItem","targetItem","nextItem","replace","Inventory","to","Kitchen","kitchenItems","setKitchenItems","newKitchenItems","kitchenItem","Cellar","cellarItems","setCellarItems","newCellarItems","cellarItem","FullscreenPrompt","text","linksTo","buttonText","App","basename","exact","path","Epilogue","window","parent","postMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ac662a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction ItemsPopupBox(props) {\r\n    \r\n    return props.object ? (\r\n      <>\r\n        <div className=\"centered-popup\">\r\n          <div className={`popup-image ${props.object.name}`} />\r\n          <div>{props.object.description}</div>\r\n          <button onClick={props.onPickUp}>Take {props.object.name}</button>\r\n          <button onClick={props.onClose}>Close</button>\r\n        </div>\r\n      </>\r\n    ) : null;\r\n}\r\n\r\n\r\nexport default ItemsPopupBox;","import React from \"react\";\r\n\r\nfunction setInventory(props) {\r\n  return (\r\n    <>\r\n      <div className=\"inventory\">\r\n        Inventory\r\n        <ul>\r\n            {props.collectedItems.map((inventoryItem) => {\r\n                return (\r\n                  <li key={inventoryItem.name}>\r\n                    <div className={`inventory-image ${inventoryItem.name}`} />\r\n                    {inventoryItem.name}\r\n                  </li>\r\n                );\r\n            })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default setInventory;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport data from \"../item-list.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UsingItems(props) {\r\n  const history = useHistory();\r\n  if (props.object && !props.object[\"requires\"]) {\r\n    return (\r\n      <>\r\n        <div className=\"centered-popup\">\r\n          <div className={`popup-image ${props.object.name}`} />\r\n          <div>{props.object.description}</div>\r\n          <button onClick={props.onUse}>Use {props.object.name}</button>\r\n          <button onClick={props.onClose}>Close</button>\r\n        </div>\r\n      </>\r\n    );\r\n  } else if (props.object) {\r\n    const requiredItem = props.inventoryItems.filter((item) => {\r\n      return props.object[\"requires\"].includes(item.name);\r\n    });\r\n\r\n    if (requiredItem.length !== props.object[\"requires\"].length) {\r\n      alert(\"A quick look into your backpack tells you that you're lacking an important item in order to progress.\");\r\n      props.onClose();\r\n    } else {\r\n      const useWithEffect = () => {\r\n        const newInventoryItems = props.inventoryItems.reduce(\r\n          (initialArray, inventoryStuff) => {\r\n            if (inventoryStuff.name !== props.object.name) {\r\n              initialArray.push(inventoryStuff);\r\n            }\r\n            return initialArray;\r\n          },\r\n          []\r\n        );\r\n        const usedItem = data.items.find((item) => {\r\n          return item.name === props.object[\"use-result\"];\r\n        });\r\n\r\n        if (usedItem) {\r\n          newInventoryItems.push(usedItem);\r\n        } else if (\r\n          props.object[\"use-result\"] &&\r\n          props.object[\"use-result\"] === \"Navigate to epilogue\"\r\n        ) { \r\n          history.push('/epilogue')\r\n        }\r\n\r\n        props.setInventoryItems(newInventoryItems);\r\n        props.onUse();\r\n      };\r\n\r\n      return (\r\n        <>\r\n          <div className=\"centered-popup\">\r\n            <div className={`popup-image ${props.object.name}`} />\r\n            <div>{props.object.description}</div>\r\n            <button onClick={useWithEffect}>Use {props.object.name}</button>\r\n            <button onClick={props.onClose}>Close</button>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n\r\nexport default UsingItems;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport ItemsPopupBox from \"./items-popup-box\";\r\nimport Inventory from \"./Inventory\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UsingItems from \"./Use-Items\";\r\n\r\nfunction Garden(props) {\r\n  const availableItems = [\"backpack\", \"key\", \"lantern\", \"shovel\", \"rug\"]; // items that can be checked for from the json\r\n  const [currentItem, setCurrentItem] = React.useState(); // name of object, function name\r\n  const collectorArray = []; // empty array, stores data from .push thing\r\n\r\n  for (const showItem of availableItems) {\r\n    // for-of loop: named var(showItem), and name of var of array above(availableItems)\r\n    const foundObject = props.data.items.find((item) => {\r\n      /* checking data which is the name we gave to the json list on line 3,\r\n       items is the name of the array in there, and .find is a thing that looks for whats in the paramater which we named \"item\"*/\r\n      return (\r\n        item.name === showItem\r\n      ); /* called item from above row, looking in the json for items with the same name as \r\n      the item being clicked (showItem) */\r\n    });\r\n    collectorArray.push(foundObject); // push the object found from the .find and temporarily store it in collectorArray\r\n  };\r\n\r\n  const [gardenItems, setGardenItems] = React.useState(collectorArray);\r\n  /* clickHandlerCreator is a function that takes targetItem and stores for \r\n  the click handler (the return) to use */\r\n  const clickHandlerCreator = (targetItem) => {\r\n    /* takes targetItem and .find allows it to check the array props.data.items\r\n    for the corresponding property value */\r\n    return () => {\r\n      const nextItem = props.data.items.find((item) => {\r\n        return item.name === targetItem;\r\n      });\r\n      setCurrentItem(nextItem);\r\n    };\r\n  };\r\n\r\n    const removeItem = () => {\r\n      const newGardenItems = gardenItems.reduce((initialArray, gardenItem) => {\r\n        if (gardenItem.name !== currentItem.name) {\r\n          initialArray.push(gardenItem);\r\n        }\r\n        return initialArray;\r\n      }, []);\r\n      setGardenItems(newGardenItems);\r\n      setCurrentItem(undefined);\r\n    };\r\n\r\n  const goToKitchen = () => {\r\n    alert(\"The door is locked. Perhaps there is a key nearby.\");\r\n  };\r\n\r\n  const haveKey = props.inventoryItems.find((key) => {\r\n    return key.name === \"key\";\r\n  });\r\n\r\n  return (\r\n    <div className=\"garden\">\r\n      {currentItem && currentItem[\"pick-up\"] ? (\r\n        <ItemsPopupBox\r\n          object={currentItem}\r\n          onPickUp={() => {\r\n            props.setInventoryItems(props.inventoryItems.concat([currentItem]));\r\n            props.setInventoryItems(props.inventoryItems.concat([currentItem]));\r\n            const newGardenItems = gardenItems.reduce(\r\n              (initialArray, gardenItem) => {\r\n                if (gardenItem.name !== currentItem.name) {\r\n                  initialArray.push(gardenItem);\r\n                }\r\n                return initialArray;\r\n              },\r\n              []\r\n            );\r\n            setGardenItems(newGardenItems);\r\n            setCurrentItem(undefined);\r\n          }}\r\n          onClose={() => {\r\n            setCurrentItem(undefined);\r\n          }}\r\n        />\r\n      ) : (\r\n        <UsingItems\r\n          object={currentItem}\r\n          inventoryItems={props.inventoryItems}\r\n          setInventoryItems={props.setInventoryItems}\r\n          onUse={() => {\r\n            alert(currentItem.use);\r\n            removeItem();\r\n          }}\r\n          onClose={() => {\r\n            setCurrentItem(undefined);\r\n          }}\r\n        />\r\n      )}\r\n      ;\r\n      {gardenItems.map((gardenItem) => {\r\n        return (\r\n          <div\r\n            key={`garden-${gardenItem.name}`}\r\n            className={gardenItem.name}\r\n            onClick={clickHandlerCreator(gardenItem.name)}\r\n          >\r\n            {gardenItem.name.replace(\"-\", \"\")}\r\n          </div>\r\n        );\r\n      })}\r\n      );\r\n      <Inventory collectedItems={props.inventoryItems} />\r\n      {!haveKey ? (\r\n        <div className=\"door-to-kitchen\" onClick={goToKitchen} />\r\n      ) : (\r\n        <Link className=\"door-to-kitchen\" to=\"/kitchen\" />\r\n      )}\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Garden;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport ItemsPopupBox from \"./items-popup-box\";\r\nimport Inventory from \"./Inventory\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UsingItems from \"./Use-Items\";\r\n\r\nfunction Kitchen(props) {\r\n  const availableItems = [\"matches\", \"salt\", \"dried-herbs\", \"mortar-pestle\"];\r\n  const [currentItem, setCurrentItem] = React.useState();\r\n  const collectorArray = [];\r\n\r\n  for (const showItem of availableItems) {\r\n    const foundObject = props.data.items.find((item) => {\r\n      return item.name === showItem;\r\n    });\r\n    collectorArray.push(foundObject);\r\n  }\r\n  const [kitchenItems, setKitchenItems] = React.useState(collectorArray);\r\n\r\n  /* clickHandlerCreator is a function that takes targetItem and stores for \r\n  the click handler (the return) to use */\r\n  const clickHandlerCreator = (targetItem) => {\r\n    /* takes targetItem and .find allows it to check the array data.items\r\n    for the corresponding property value */\r\n    return () => {\r\n      const nextItem = props.data.items.find((item) => {\r\n        return item.name === targetItem;\r\n      });\r\n      setCurrentItem(nextItem);\r\n    };\r\n  };\r\n\r\n  const removeItem = () => {\r\n    const newKitchenItems = kitchenItems.reduce((initialArray, kitchenItem) => {\r\n      if (kitchenItem.name !== currentItem.name) {\r\n        initialArray.push(kitchenItem);\r\n      }\r\n      return initialArray;\r\n    }, []);\r\n    setKitchenItems(newKitchenItems);\r\n    setCurrentItem(undefined);\r\n  };\r\n\r\n  return (\r\n    <div className=\"kitchen\">\r\n      {currentItem && currentItem[\"pick-up\"] ? (\r\n        <ItemsPopupBox\r\n          object={currentItem}\r\n          onPickUp={() => {\r\n            props.setInventoryItems(props.inventoryItems.concat([currentItem]));\r\n            const newKitchenItems = kitchenItems.reduce(\r\n              (initialArray, kitchenItem) => {\r\n                if (kitchenItem.name !== currentItem.name) {\r\n                  initialArray.push(kitchenItem);\r\n                }\r\n                return initialArray;\r\n              },\r\n              []\r\n            );\r\n            setKitchenItems(newKitchenItems);\r\n            setCurrentItem(undefined);\r\n          }}\r\n          onClose={() => {\r\n            setCurrentItem(undefined);\r\n          }}\r\n        />\r\n      ) : (\r\n        <UsingItems\r\n          object={currentItem}\r\n          inventoryItems={props.inventoryItems}\r\n          setInventoryItems={props.setInventoryItems}\r\n          onUse={() => {\r\n            alert(currentItem.use);\r\n            removeItem();\r\n          }}\r\n          onClose={() => {\r\n            setCurrentItem(undefined);\r\n          }}\r\n        />\r\n      )}\r\n      ;\r\n      {kitchenItems.map((kitchenItem) => {\r\n        return (\r\n          <div\r\n            className={kitchenItem.name}\r\n            onClick={clickHandlerCreator(kitchenItem.name)}\r\n          >\r\n            {kitchenItem.name.replace(\"-\", \" \")}\r\n          </div>\r\n        );\r\n      })}\r\n      <Inventory collectedItems={props.inventoryItems} />\r\n      <Link className=\"cellar-door\" to=\"/cellar\">\r\n        {\" \"}\r\n        Steps to the cellar\r\n      </Link>\r\n      <Link className=\"kitchen-door\" to=\"/garden\">\r\n        To the garden\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Kitchen;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport ItemsPopupBox from \"./items-popup-box\";\r\nimport Inventory from \"./Inventory\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UsingItems from \"./Use-Items\";\r\n\r\nfunction Cellar(props) {\r\n  const availableItems = [\"mound-of-dirt\", \"patch-of-even-ground\", \"chalk\"];\r\n  const [currentItem, setCurrentItem] = React.useState();\r\n  const collectorArray = [];\r\n\r\n  for (const showItem of availableItems) {\r\n    const foundObject = props.data.items.find((item) => {\r\n      return item.name === showItem;\r\n    });\r\n    collectorArray.push(foundObject);\r\n  };\r\n  const [cellarItems, setCellarItems] = React.useState(collectorArray);\r\n\r\n  /* clickHandlerCreator is a function that takes targetItem and stores for \r\n  the click handler (the return) to use */\r\n  const clickHandlerCreator = (targetItem) => {\r\n    /* takes targetItem and .find allows it to check the array props.data.items\r\n    for the corresponding property value */\r\n    return () => {\r\n      const nextItem = props.data.items.find((item) => {\r\n        return item.name === targetItem;\r\n      });\r\n      setCurrentItem(nextItem);\r\n    };\r\n  };\r\n\r\n  const removeItem = () => {\r\n    const newCellarItems = cellarItems.reduce((initialArray, cellarItem) => {\r\n      if (cellarItem.name !== currentItem.name) {\r\n        initialArray.push(cellarItem);\r\n      }\r\n      return initialArray;\r\n    }, []);\r\n    setCellarItems(newCellarItems);\r\n    setCurrentItem(undefined);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cellar\">\r\n      {currentItem && currentItem[\"pick-up\"] ? (\r\n        <ItemsPopupBox\r\n          object={currentItem}\r\n          onPickUp={() => {\r\n            props.setInventoryItems(props.inventoryItems.concat([currentItem]));\r\n            const newCellarItems = cellarItems.reduce(\r\n              (initialArray, cellarItem) => {\r\n                if (cellarItem.name !== currentItem.name) {\r\n                  initialArray.push(cellarItem);\r\n                }\r\n                return initialArray;\r\n              },\r\n              []\r\n            );\r\n            setCellarItems(newCellarItems);\r\n            setCurrentItem(undefined);\r\n          }}\r\n          onClose={() => {\r\n            setCurrentItem(undefined);\r\n          }}\r\n        />\r\n      ) : (\r\n        <UsingItems\r\n          object={currentItem}\r\n          inventoryItems={props.inventoryItems}\r\n          setInventoryItems={props.setInventoryItems}\r\n          onUse={() => {\r\n            alert(currentItem.use);\r\n            removeItem();\r\n          }}\r\n          onClose={() => {\r\n            setCurrentItem(undefined);\r\n          }}\r\n        />\r\n      )}\r\n      {cellarItems.map((cellarItem) => {\r\n        return (\r\n          <div\r\n            className={cellarItem.name}\r\n            onClick={clickHandlerCreator(cellarItem.name)}\r\n          >\r\n            {cellarItem.name.replace(\"-\", \" \")}\r\n          </div>\r\n        );\r\n      })}\r\n      <Inventory collectedItems={props.inventoryItems} />\r\n      <Link className=\"cellar-door-to-kitchen\" to=\"/kitchen\">\r\n        Steps to the kitchen\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cellar;","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction FullscreenPrompt(props) {\r\n    const history = useHistory();\r\n\r\n    const moveToRoute = () => {\r\n      if (!props.linksTo) return;\r\n    \r\n      if (typeof props.linksTo === 'string') { \r\n        history.push(props.linksTo);\r\n      } else {\r\n          props.linksTo();\r\n      }\r\n    };\r\n  return (\r\n    <>\r\n      <div className=\"inventory epilogue\">\r\n        {props.text}\r\n        <button onClick={moveToRoute}>{props.buttonText}</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FullscreenPrompt;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Garden from \"./Components/Garden\";\r\nimport Kitchen from \"./Components/Kitchen\";\r\nimport Cellar from \"./Components/Cellar\";\r\nimport data from \"./item-list.json\";\r\nimport Epilogue from \"./Components/Epilogue\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [inventoryItems, setInventoryItems] = React.useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Router basename=\"/puzzle-game\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Epilogue\r\n              text={`\r\n                 The gentle patter of the rain tapping your face slowly rouses you from unconsciousness as the grass beneath you begins to permeate your clothes with a cold wetness.\r\n Wait, rain, grass? You sit up, suddenly confused as to why you are sitting in a garden in the rain. The last thing you remember is falling asleep in that creepy abandoned mansion with the suspiciously well kept beds.and the laughing... that deep throated, malicious chuckle as you drifted off...\r\n….Shit. This must be a sleep demon's dream prison! (You have watched enough supernatural shows to know where this is going). The only way out is through, you’ll have to capture this damned demon before it eats your soul and you are stuck here forever! I bet there are some useful things around here that you can fashion into a trap...\r\n              `}\r\n              linksTo=\"/garden\"\r\n              buttonText=\"Start game\"\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/garden\">\r\n            <Garden\r\n              inventoryItems={inventoryItems}\r\n              setInventoryItems={setInventoryItems}\r\n              data={data}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/kitchen\">\r\n            <Kitchen\r\n              inventoryItems={inventoryItems}\r\n              setInventoryItems={setInventoryItems}\r\n              data={data}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/cellar\">\r\n            <Cellar\r\n              inventoryItems={inventoryItems}\r\n              setInventoryItems={setInventoryItems}\r\n              data={data}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/epilogue\">\r\n            <Epilogue\r\n              text={`\r\n                You glance into your backpack at the assorted items. This looks like it may be good enough to capture this demon and wake you from this eternal sleep, but who knows at this point. Either way, it's time for action. You place the candles one each side of the bottom of the stairs, strike your matches, and light them. An eerie green flame bursts from the wick, then settles, leaving an unnatural glow behind. You take the chalk and draw an intricate pattern on the floor, which you just hope is enough. You then sprinkle the ground herbs over the trap, which causes the whole thing to hiss and steam. Quickly you cover the trap with the rug, then step into a corner and draw a circle of salt around where you stand. This should keep you safe from the demon. Suddenly you hear the cellar door creek open, and the stench of sulfur fills the air. A deep, filthy laugh echos down the stairs. 'Did you think you could hide from me?' it rumbles, as it takes a step down. The sounds of its cloven foot echo on the stone steps. 'I know you are down here. Come out and play, I have a game in mind for someone like you.' Two more steps it takes, before noticing the green glow of the candles. 'What are these? Do you expect this to stop me from entering? HAHAHAH puny mortal, perhaps I misjudged your intelligence.' A few more heavy thuds on the steps, then a muffled thud as it steps onto the rug. You hear the demon sniffing the air '...What's that? That scent... seems familiar...' Suddenly a bright yellow light leaks out from underneath the rug, curling around like smoke and accompanied by a loud humming sound. It is not bad enough to make you cover your ears, yet the demon appears to be in agony. He clasps his clawed hands to his gnarled ears, writhing where he stands. 'WHAT IS THIS' he howls, stumbling forward. A pillar of white light bursts from the ground infront of the demon and shoots through the ceiling. More beams burst around him as he twists and turns, looking for an escape. Finally only his shadowy outline is distinguishable behind the pillar of light. 'FOOLISH LITTLE CREATURE!' comes the gutteral cry from behind the light. Is that singing you hear? 'DO YOU KNOW WHO I AM? YOU WILL REGRET THIS-AGHHHHH!' the growling and howling finally die down, and with it, the light. The candles extinguish and leave behind a disgusting smelling cloud of green smoke. Suddenly you sit up in bed, gasping for breath, sweating and shaking, but awake. You made it out of the dream world!\r\n              `}\r\n              linksTo={() => window.parent.postMessage(\"nextLevel\")}\r\n              buttonText=\"The End!\"\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}